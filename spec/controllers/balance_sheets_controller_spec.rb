require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe BalanceSheetsController do

  def mock_balance_sheet(stubs={})
    @mock_balance_sheet ||= mock_model(BalanceSheet, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all balance_sheets as @balance_sheets" do
      BalanceSheet.stub(:all) { [mock_balance_sheet] }
      get :index
      assigns(:balance_sheets).should eq([mock_balance_sheet])
    end
  end

  describe "GET show" do
    it "assigns the requested balance_sheet as @balance_sheet" do
      BalanceSheet.stub(:find).with("37") { mock_balance_sheet }
      get :show, :id => "37"
      assigns(:balance_sheet).should be(mock_balance_sheet)
    end
  end

  describe "GET new" do
    it "assigns a new balance_sheet as @balance_sheet" do
      BalanceSheet.stub(:new) { mock_balance_sheet }
      get :new
      assigns(:balance_sheet).should be(mock_balance_sheet)
    end
  end

  describe "GET edit" do
    it "assigns the requested balance_sheet as @balance_sheet" do
      BalanceSheet.stub(:find).with("37") { mock_balance_sheet }
      get :edit, :id => "37"
      assigns(:balance_sheet).should be(mock_balance_sheet)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created balance_sheet as @balance_sheet" do
        BalanceSheet.stub(:new).with({'these' => 'params'}) { mock_balance_sheet(:save => true) }
        post :create, :balance_sheet => {'these' => 'params'}
        assigns(:balance_sheet).should be(mock_balance_sheet)
      end

      it "redirects to the created balance_sheet" do
        BalanceSheet.stub(:new) { mock_balance_sheet(:save => true) }
        post :create, :balance_sheet => {}
        response.should redirect_to(balance_sheet_url(mock_balance_sheet))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved balance_sheet as @balance_sheet" do
        BalanceSheet.stub(:new).with({'these' => 'params'}) { mock_balance_sheet(:save => false) }
        post :create, :balance_sheet => {'these' => 'params'}
        assigns(:balance_sheet).should be(mock_balance_sheet)
      end

      it "re-renders the 'new' template" do
        BalanceSheet.stub(:new) { mock_balance_sheet(:save => false) }
        post :create, :balance_sheet => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested balance_sheet" do
        BalanceSheet.stub(:find).with("37") { mock_balance_sheet }
        mock_balance_sheet.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :balance_sheet => {'these' => 'params'}
      end

      it "assigns the requested balance_sheet as @balance_sheet" do
        BalanceSheet.stub(:find) { mock_balance_sheet(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:balance_sheet).should be(mock_balance_sheet)
      end

      it "redirects to the balance_sheet" do
        BalanceSheet.stub(:find) { mock_balance_sheet(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(balance_sheet_url(mock_balance_sheet))
      end
    end

    describe "with invalid params" do
      it "assigns the balance_sheet as @balance_sheet" do
        BalanceSheet.stub(:find) { mock_balance_sheet(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:balance_sheet).should be(mock_balance_sheet)
      end

      it "re-renders the 'edit' template" do
        BalanceSheet.stub(:find) { mock_balance_sheet(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested balance_sheet" do
      BalanceSheet.stub(:find).with("37") { mock_balance_sheet }
      mock_balance_sheet.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the balance_sheets list" do
      BalanceSheet.stub(:find) { mock_balance_sheet }
      delete :destroy, :id => "1"
      response.should redirect_to(balance_sheets_url)
    end
  end

end
